//***********************************************************
// 
// ポーズ
// Author Tetsuji Yamamoto
// 
//***********************************************************
#include "pause.h"

#include "json.hpp"

using json = nlohmann::json;

//***********************************************************
// ポーズ
//***********************************************************
CPause::CPause(int nPriority):CObject(nPriority)
{
	m_bPause = false;
}

//***********************************************************
// ポーズ
//***********************************************************
CPause::~CPause()
{
}

//***********************************************************
// ポーズ
//***********************************************************
HRESULT CPause::Init(void)
{
	m_bPause = false;

	
	return S_OK;
}

//***********************************************************
// ポーズ
//***********************************************************
void CPause::Uninit(void)
{
	Release();
}

//***********************************************************
// ポーズ
//***********************************************************
void CPause::Update(void)
{

}

//***********************************************************
// ポーズ
//***********************************************************
void CPause::Draw(void)
{

}

//***********************************************************
// ポーズ
//***********************************************************
CPause* CPause::Create(void)
{
	CPause* pPause = NULL;
	int nNumAll = GetObujectNumAll();

	// オブジェクト2Dの生成
	if (pPause == NULL)
	{
		if (nNumAll >= MAX_OBJECT)
		{
			return NULL;
		}

		pPause = new CPause(CObject::PRIORITY_5);
		if (pPause != NULL)
		{
			// 初期化処理
			pPause->Init();
		}
		else
		{
			MessageBox(NULL, " CPause* CPause::Create() > if ( pPause != NULL) メモリを確保できませんでした", "Error", MB_OK);
		}
	}
	else
	{
		MessageBox(NULL, " CPause* CPause::Create() > if ( pPause == NULL) メモリを確保できませんでした", "Error", MB_OK);
	}

	return  pPause;
}